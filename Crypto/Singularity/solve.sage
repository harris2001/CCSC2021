M = 218925954923455975113808255640357734801
A = 117784136680056914958014732219575150968
B = 115857097425776487375223208492285700589

xx=3477412715407459121010679931851697672

P.<x>=GF(M)[]
f = x^3 + A*x +B
f_ = f.subs(x=x-xx)
print(f_.factor())

t = GF(M)(208493716777233597750776215844802641785).square_root()
print(t)

G = (1, 12925268147578859956582415706419653103)
P = (83120571548610219336387422119327889747, 142472226619953807903704206304442544019)
Q = (132577002137522699788630037342938299835, 42276980267889888363445760641870330604)


G_ = (GF(M)(G[0] + xx), GF(M)(G[1]))
P_ = (GF(M)(P[0] + xx), GF(M)(P[1]))
Q_ = (GF(M)(Q[0] + xx), GF(M)(Q[1]))

print(G_)
print(P_)
print(Q_)


u = (G_[1] + t*G_[0])/(G_[1] - t*G_[0]) % M
v1 = (Q_[1] + t*Q_[0])/(Q_[1] - t*Q_[0]) % M
v2 = (P_[1] + t*P_[0])/(P_[1] - t*P_[0]) % M
print(discrete_log(GF(M)(v1),GF(M)(u)))
print(discrete_log(GF(M)(v2),GF(M)(u)))

######
'''
mapG = G_[0]*(G_[1]^-1)
mapP = P_[0]*(P_[1]^-1)
mapQ = Q_[0]*(Q_[1]^-1)

d1 = mapP*(mapG^-1)
print(d1)

d2 = mapQ*(mapG^-1)
print(d2)
'''
